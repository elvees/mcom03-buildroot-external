From 6dc750fad067e1a1a873903c11c9fe82e94a5e31 Mon Sep 17 00:00:00 2001
From: Timur Prokopenko <tprokopenko@elvees.com>
Date: Fri, 26 Apr 2022 18:50:02 +0300
Subject: [PATCH] Add CP0 register access macros

Define macros for accessing the MIPS32 coprocessor 0 registers.
---
 .../mipsel-elf32/include/m32c0.h              | 34 ++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/gcc-mipsel-elf32_linux/mipsel-elf32/include/m32c0.h b/gcc-mipsel-elf32_linux/mipsel-elf32/include/m32c0.h
index 47cfad0..d40a329 100644
--- a/gcc-mipsel-elf32_linux/mipsel-elf32/include/m32c0.h
+++ b/gcc-mipsel-elf32_linux/mipsel-elf32/include/m32c0.h
@@ -205,4 +205,38 @@
 #define C0_KSCRATCH5		0x61F
 #define C0_KSCRATCH6		0x71F
 
+/*
+ * Define macros for accessing the MIPS32 coprocessor 0 registers.
+ * These macros take an encoded (register, select) combination,
+ * so they can use the textual names above.
+ */
+
+#define mips32_get_c0(selreg) \
+__extension__ ({ \
+  register unsigned long __r; \
+  __asm__ __volatile ("mfc0 %0,$%1,%2" \
+		      : "=d" (__r) \
+		      : "JK" (selreg & 0x1F), "JK" (selreg >> 8)); \
+  __r; \
+})
+
+#define mips32_set_c0(selreg, val) \
+do { \
+    __asm__ __volatile (".set push \n"\
+			".set noreorder\n"\
+			"mtc0 %z0,$%1,%2\n"\
+			"ehb\n" \
+			".set pop" \
+			: \
+			: "dJ" ((uint32_t)(val)), "JK" (selreg & 0x1F),\
+			  "JK" (selreg >> 8) \
+			: "memory"); \
+} while (0)
+
+#define mips_ehb()		\
+  ({__asm__ volatile ("\t ehb \n");})
+
+#define mips_tlbwi()	\
+  ({__asm__ volatile ("\t tlbwi \n");})
+
 #endif
-- 
2.29.2
